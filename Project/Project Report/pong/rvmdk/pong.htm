<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\pong.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\pong.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060183: Last Updated: Sat Oct 29 04:09:27 2016
<BR><P>
<H3>Maximum Stack Usage =        160 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; DynamicsTick &rArr; MoveBall &rArr; PongInit &rArr; DrawScores &rArr; PutcharLCD &rArr; outchar &rArr; drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[6]">Reset_Handler</a>
 <LI><a href="#[36]">InitLCD</a>
 <LI><a href="#[e]">DrawPixel</a>
 <LI><a href="#[d]">ClearPixel</a>
 <LI><a href="#[3a]">UpdateScreen</a>
 <LI><a href="#[37]">ClearLCD</a>
 <LI><a href="#[12]">PutcharLCD</a>
 <LI><a href="#[3b]">Backlight</a>
 <LI><a href="#[11]">CursorPos</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[a]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysCtlDelay</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 113 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[6]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[4]">UARTIntHandler</a> from pong.o(i.UARTIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">main</a> from pong.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[3c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[8]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[3e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[3f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[40]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[41]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[a]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
</UL>

<P><STRONG><a name="[13]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGameOver
</UL>

<P><STRONG><a name="[9]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[42]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[c]"></a>DrawBall</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, pong.o(i.DrawBall))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = DrawBall &rArr; DrawPixel &rArr; setpixel &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetBall
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PongInit
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveBall
</UL>

<P><STRONG><a name="[f]"></a>DrawCentreDottedLine</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, pong.o(i.DrawCentreDottedLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = DrawCentreDottedLine &rArr; DrawPixel &rArr; setpixel &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PongInit
</UL>

<P><STRONG><a name="[10]"></a>DrawGameOver</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, pong.o(i.DrawGameOver))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = DrawGameOver &rArr; PutcharLCD &rArr; outchar &rArr; drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutcharLCD
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorPos
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleScores
</UL>

<P><STRONG><a name="[14]"></a>DrawPaddleP1</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, pong.o(i.DrawPaddleP1))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = DrawPaddleP1 &rArr; DrawPixel &rArr; setpixel &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PongInit
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MovePaddleP1
</UL>

<P><STRONG><a name="[15]"></a>DrawPaddleP2</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, pong.o(i.DrawPaddleP2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = DrawPaddleP2 &rArr; DrawPixel &rArr; setpixel &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PongInit
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MovePaddleP2
</UL>

<P><STRONG><a name="[16]"></a>DrawScores</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, pong.o(i.DrawScores))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = DrawScores &rArr; PutcharLCD &rArr; outchar &rArr; drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutcharLCD
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorPos
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PongInit
</UL>

<P><STRONG><a name="[17]"></a>DynamicsTick</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, pong.o(i.DynamicsTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = DynamicsTick &rArr; MoveBall &rArr; PongInit &rArr; DrawScores &rArr; PutcharLCD &rArr; outchar &rArr; drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveBall
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleScores
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a]"></a>GPIOClear</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd.o(i.GPIOClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIOClear
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_command
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiwrite
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colour
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
</UL>

<P><STRONG><a name="[1f]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>

<P><STRONG><a name="[1e]"></a>GPIOPadConfigSet</STRONG> (Thumb, 314 bytes, Stack size 28 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>

<P><STRONG><a name="[34]"></a>GPIOPinConfigure</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSet
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOClear
</UL>

<P><STRONG><a name="[1d]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[1c]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSet
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOClear
</UL>

<P><STRONG><a name="[20]"></a>GPIOSet</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lcd.o(i.GPIOSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_data
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiwrite
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colour
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
</UL>

<P><STRONG><a name="[18]"></a>HandleScores</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, pong.o(i.HandleScores))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = HandleScores &rArr; DrawGameOver &rArr; PutcharLCD &rArr; outchar &rArr; drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetBall
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGameOver
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynamicsTick
</UL>

<P><STRONG><a name="[19]"></a>MoveBall</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, pong.o(i.MoveBall))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = MoveBall &rArr; PongInit &rArr; DrawScores &rArr; PutcharLCD &rArr; outchar &rArr; drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PongInit
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynamicsTick
</UL>

<P><STRONG><a name="[23]"></a>MovePaddleP1</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, pong.o(i.MovePaddleP1))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = MovePaddleP1 &rArr; DrawPaddleP1 &rArr; DrawPixel &rArr; setpixel &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPixel
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPaddleP1
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>MovePaddleP2</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, pong.o(i.MovePaddleP2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = MovePaddleP2 &rArr; DrawPaddleP2 &rArr; DrawPixel &rArr; setpixel &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPixel
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPaddleP2
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22]"></a>PongInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, pong.o(i.PongInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = PongInit &rArr; DrawScores &rArr; PutcharLCD &rArr; outchar &rArr; drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawScores
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPaddleP2
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPaddleP1
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCentreDottedLine
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveBall
</UL>

<P><STRONG><a name="[21]"></a>ResetBall</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, pong.o(i.ResetBall))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = ResetBall &rArr; DrawBall &rArr; DrawPixel &rArr; setpixel &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleScores
</UL>

<P><STRONG><a name="[25]"></a>SetupLCD</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, lcd.o(i.SetupLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SetupLCD &rArr; outchar &rArr; drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_set_brightness
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_command
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSet
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOClear
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outchar
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursorXY
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colour
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrscr
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLCD
</UL>

<P><STRONG><a name="[2e]"></a>SysCtlClockGet</STRONG> (Thumb, 304 bytes, Stack size 12 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
</UL>

<P><STRONG><a name="[33]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[4]"></a>UARTIntHandler</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, pong.o(i.UARTIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UARTIntHandler &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>UARTSend</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, pong.o(i.UARTSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[44]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[45]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[2f]"></a>clrpixel</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, lcd.o(i.clrpixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = clrpixel &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_data
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_command
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPixel
</UL>

<P><STRONG><a name="[2b]"></a>clrscr</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd.o(i.clrscr))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = clrscr &rArr; write_buffer &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLCD
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outchar
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
</UL>

<P><STRONG><a name="[2a]"></a>colour</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcd.o(i.colour))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = colour &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSet
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOClear
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Backlight
</UL>

<P><STRONG><a name="[2c]"></a>cursorXY</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd.o(i.cursorXY))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorPos
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
</UL>

<P><STRONG><a name="[32]"></a>drawchar</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, lcd.o(i.drawchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_data
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_command
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outchar
</UL>

<P><STRONG><a name="[26]"></a>gpio_init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, lcd.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gpio_init &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
</UL>

<P><STRONG><a name="[5]"></a>main</STRONG> (Thumb, 272 bytes, Stack size 0 bytes, pong.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = main &rArr; DynamicsTick &rArr; MoveBall &rArr; PongInit &rArr; DrawScores &rArr; PutcharLCD &rArr; outchar &rArr; drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLCD
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLCD
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PongInit
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MovePaddleP2
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MovePaddleP1
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynamicsTick
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawScores
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2d]"></a>outchar</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, lcd.o(i.outchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = outchar &rArr; drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawchar
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrscr
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutcharLCD
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
</UL>

<P><STRONG><a name="[38]"></a>setpixel</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, lcd.o(i.setpixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = setpixel &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_data
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_command
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>

<P><STRONG><a name="[39]"></a>spiwrite</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lcd.o(i.spiwrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSet
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOClear
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_data
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_command
</UL>

<P><STRONG><a name="[28]"></a>st7565_command</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcd.o(i.st7565_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = st7565_command &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiwrite
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOClear
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_set_brightness
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawchar
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setpixel
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrpixel
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
</UL>

<P><STRONG><a name="[30]"></a>st7565_data</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcd.o(i.st7565_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiwrite
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSet
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawchar
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setpixel
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrpixel
</UL>

<P><STRONG><a name="[27]"></a>st7565_init</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, lcd.o(i.st7565_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = st7565_init &rArr; st7565_command &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_command
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSet
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOClear
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
</UL>

<P><STRONG><a name="[29]"></a>st7565_set_brightness</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcd.o(i.st7565_set_brightness))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = st7565_set_brightness &rArr; st7565_command &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_command
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
</UL>

<P><STRONG><a name="[31]"></a>write_buffer</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lcd.o(i.write_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = write_buffer &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_data
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7565_command
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outchar
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrscr
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateScreen
</UL>

<P><STRONG><a name="[36]"></a>InitLCD</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, wrappers.o(main))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = InitLCD &rArr; SetupLCD &rArr; outchar &rArr; drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e]"></a>DrawPixel</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, wrappers.o(main))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = DrawPixel &rArr; setpixel &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setpixel
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPaddleP2
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPaddleP1
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCentreDottedLine
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>

<P><STRONG><a name="[d]"></a>ClearPixel</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, wrappers.o(main))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = ClearPixel &rArr; clrpixel &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrpixel
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MovePaddleP2
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MovePaddleP1
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>

<P><STRONG><a name="[3a]"></a>UpdateScreen</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, wrappers.o(main), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer
</UL>

<P><STRONG><a name="[37]"></a>ClearLCD</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, wrappers.o(main))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = ClearLCD &rArr; clrscr &rArr; write_buffer &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrscr
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12]"></a>PutcharLCD</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, wrappers.o(main))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = PutcharLCD &rArr; outchar &rArr; drawchar &rArr; st7565_data &rArr; spiwrite &rArr; GPIOSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outchar
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawScores
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGameOver
</UL>

<P><STRONG><a name="[3b]"></a>Backlight</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, wrappers.o(main), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colour
</UL>

<P><STRONG><a name="[11]"></a>CursorPos</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, wrappers.o(main))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursorXY
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawScores
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGameOver
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
